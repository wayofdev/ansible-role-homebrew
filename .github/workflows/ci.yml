---

name: ci

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      shouldPublishImage:
        description: 'Should publish image to Ansible Galaxy? (yes/no)'
        required: false
        default: 'no'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          set -eux
          make install-all-deps

      - name: Run linting tasks
        run: make lint

  integration:
    name: Integration.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-12

    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Uninstall built-in Homebrew
        run: tests/uninstall-homebrew.sh

      - name: Uninstall built-in browsers
        run: |
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /Applications/Google\ Chrome.app

      - name: Install gettext for Poetry
        run: |
          curl -O https://ftp.gnu.org/gnu/gettext/gettext-0.20.1.tar.gz
          tar xvfz gettext-0.20.1.tar.gz
          cd gettext-0.20.1
          ./configure --prefix=/usr/local/gettext/0_20_1 \
            --disable-dependency-tracking \
            --disable-silent-rules \
            --disable-java \
            --disable-csharp \
            --without-git \
            --without-cvs \
            --without-xz
            --with-included-gettext
          make
          make install
          tests/gettext-symlinks.sh
          export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
          export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH
          export ACLOCAL_PATH=/usr/local/share/aclocal/:$ACLOCAL_PATH

      - name: Install test dependencies
        run: |
          set -eux
          pip3 install --upgrade pip
          pip3 install ansible-core
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook
        run: ansible-playbook tests/test.yml --ask-become -vvv
        env:
          ANSIBLE_FORCE_COLOR: '1'
          ANSIBLE_STDOUT_CALLBACK: 'unixy'

      - name: Idempotence check
        run: |
          idempotence=$(mktemp)
          cd tests && ansible-playbook test.yml | tee -a ${idempotence}
          tail ${idempotence} \
            | grep -q 'changed=0.*failed=0' \
            && (echo 'Idempotence test: pass' && exit 0) \
            || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: '1'
          ANSIBLE_STDOUT_CALLBACK: 'unixy'

  publish:
    if: github.event.inputs.shouldPublishImage == 'yes' || github.ref == 'refs/heads/master'
    needs:
      - lint
      - integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Publish to Ansible Galaxy
        uses: lotyp/galaxy-action@1.2.1
        with:
          galaxy_api_key: ${{ secrets.GALAXY_API_KEY }}
