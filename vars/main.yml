---

homebrew_prefix_linux: /home/linuxbrew/.linuxbrew
homebrew_prefix_macos: "{{ (ansible_machine == 'arm64') | ternary('/opt/homebrew', '/usr/local') }}"
homebrew_prefix: "{{ (ansible_system == 'Linux') | ternary(homebrew_prefix_linux, homebrew_prefix_macos) }}"

homebrew_install_path: "{{ homebrew_prefix }}/Homebrew"
homebrew_bin_path: "{{ homebrew_prefix }}/bin"

# Some casks may require sudo to complete their install
homebrew_sudo_password: "{{ ansible_become_password | default(omit) }}"

# Default install state if no state was provided with package name
homebrew_install_state: "present" # <absent | head | installed | latest | linked | present | removed | uninstalled | unlinked | upgraded>

# Default install state if no state was provided with cask name
homebrew_cask_install_state: "present" # <absent | installed | latest | present | removed | uninstalled | upgraded>

homebrew_folders:
  - Cellar
  - Homebrew
  - Frameworks
  - Caskroom
  - bin
  - etc
  - include
  - lib
  - opt
  - sbin
  - share
  - share/zsh
  - share/zsh/site-functions
  - var

homebrew_analytics_vars:
  true: "enabled"
  false: "disabled"

homebrew_linux_reqs:
  generic:
    - file
    - curl

  yum:
    - procps-ng  # Includes ps, free, skill, pkill, pgrep, snice, tload, top, uptime, vmstat, pidof, pmap, slabtop, w, watch, pwdx and pidwait

  apt:
    - build-essential
    - procps  # Sames as procps-ng on yum

homebrew_search_paths:
  - /usr/local/bin
  - /opt/homebrew/bin
  - /home/linuxbrew/.linuxbrew/bin

# OS user and group from whom installation will be running.
# By default ansible_user_id and ansible_user_gid are used.
homebrew_user: "{{ (ansible_system == 'Linux') | ternary('linuxbrew', ansible_user_id) }}"
homebrew_group: "{{ (ansible_system == 'Linux') | ternary('linuxbrew', ansible_user_gid) }}"
